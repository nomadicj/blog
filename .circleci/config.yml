version: 2.1

orbs:
  hello: circleci/hello-build@0.0.7 # uses the circleci/buildpack-deps Docker image

jobs:
  build:
    working_directory: ~/blog
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - run:
          name: install bundler
          command: 'gem install bundler'
      - run:
          name: run bundler install
          command: 'cd ~/blog/jekyll-uno && bundle install'
      - run:
          name: build site
          command: 'cd ~/blog/jekyll-uno && jekyll build'
      - run:
          name: create artefact
          command: 'tar -cvf ~/blog/build.tar ~/blog/jekyll-uno/_site'
      - store_artifacts:
          path: '~/blog/build.tar'
      - save_cache:
          key: assets-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/blog/jekyll-uno/_site/

  cert:
    docker:
      - image: certbot/dns-route53
        environment:
            DOMAIN: "armstro.ca"
            BUILD: $CIRCLE_BUILD_NUM
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - run:
          name: Add AWS CLI
          command: 'pip install awscli'
      - run:
          name: Define Environment Variable at Runtime
          command: |
            echo 'export DOMAIN=armstro.ca' >> $BASH_ENV
            echo 'export BUILD=$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Renew Cert
          command: 'sh ~/blog/letsencrypt/cert.sh'

  environment:
    working_directory: ~/blog
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: initiate terraform
          command: 'cd terraform && terraform init -backend-config=armstro.co.backend.tfvars -reconfigure -no-color -input=false'
      - run:
          name: apply terraform
          command: 'cd terraform && terraform apply -auto-approve -no-color -input=false'

  deploy:
    docker:
      - image: circleci/python
    working_directory: ~/blog/jekyll-uno/_site/
    steps:
      - run:
          name: Install awscli
          command: 'sudo pip install awscli'
      - restore_cache:
          key: assets-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Deploy to S3
          command: 'aws s3 sync ~/blog/jekyll-uno/_site/ s3://armstro.co/ --delete --cache-control max-age=600'

workflows:
  version: 2
  build_jekyll:
    jobs:
      - build
      - environment
      - deploy:
          requires:
            - build
